{"version":3,"sources":["components/SongCard.js","components/SongResultCard.js","App.js","reportWebVitals.js","index.js"],"names":["SongCard","props","className","width","height","style","marginRight","src","onClick","name","SongResultCard","target","href","App","useState","inp","changeInp","list","changeList","method","changeMethod","results","changeResults","myRef","useRef","useEffect","document","getElementById","display","fetch","then","blob","json","data","console","log","length","current","scrollIntoView","alt","marginBottom","value","type","onChange","e","placeholder","backgroundColor","borderRadius","padding","marginTop","map","li","checked","fontWeight","letterSpacing","encodeURI","error","textAlign","alignItems","id","class","result","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d0bb20cd.chunk.js","sourcesContent":["function SongCard(props) {\n  return (\n    <div className=\"songCard\">\n        <img className=\"musicLogo\"\n        width=\"24\"\n        height=\"24\"\n        style={{\n          marginRight:2\n        }}\n        src=\"https://iconsplace.com/wp-content/uploads/_icons/ffffff/256/png/music-icon-18-256.png\"/>\n        <li onClick={props.onClick}>{props.name}</li>\n    </div>\n  );\n}\n\nexport default SongCard;\n","function SongResultCard(props) {\n    return (\n      <div className=\"songCard\">\n        <a target=\"_blank\" href={`https://www.youtube.com/results?search_query=${props.name}`}>\n          <div className=\"Row\">\n          <img className=\"musicLogo\"\n        width=\"24\"\n        height=\"24\"\n        style={{\n          marginRight:12\n        }}\n        src=\"https://iconsplace.com/wp-content/uploads/_icons/ffffff/256/png/music-icon-18-256.png\"/>\n          <li onClick={props.onClick}>{props.name}</li>\n          </div>\n        </a>\n      </div>\n    );\n  }\n  \n  export default SongResultCard;\n  ","import \"./App.css\";\nimport SongCard from \"./components/SongCard\";\nimport { useEffect, useState, useRef } from \"react\";\nimport SongResultCard from \"./components/SongResultCard\";\n\nfunction App() {\n  let [inp, changeInp] = useState(\"\");\n  let [list, changeList] = useState([]);\n  let [method, changeMethod] = useState(false);\n  let [results, changeResults] = useState([]);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (inp === \"\") {\n      changeList([]);\n      return;\n    }\n    document.getElementById(\"error\").style.display = \"none\";\n\n    var methodName = method === true? \"content\" : \"collab\";\n\n    fetch(`https://music-recommender-ai.herokuapp.com/api/search?q=${inp}`, {\n      method: \"GET\",\n    })\n      .then((blob) => blob.json())\n      .then((data) => {\n        console.log(data);\n        changeList(data);\n      });\n  }, [inp]);\n\n  useEffect(() => {\n    if (results === [] || results.length === 0) {\n      document.getElementById(\"magic\").style.display = \"none\";\n    } else {\n      myRef.current.scrollIntoView();\n      changeList([]);\n      document.getElementById(\"magic\").style.display = \"block\";\n      document.getElementById(\"error\").style.display = \"none\";\n\n    }\n  }, [results]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Spotify_logo_without_text.svg/768px-Spotify_logo_without_text.svg.png\"\n          className=\"App-logo\"\n          alt=\"logo\"\n        />\n        <div className=\"search\">\n          <input\n            style={{\n              marginBottom: \"0\",\n            }}\n            value={inp}\n            type=\"text\"\n            onChange={(e) => {\n              changeInp(e.target.value);\n              changeResults([]);\n            }}\n            placeholder=\"Enter your favourite song\"\n          />\n          <ul\n            style={{\n              backgroundColor: \"#1aa34a\",\n              borderRadius: \"0 0 5px 5px\",\n              padding: \"0.5em\",\n              marginTop: 0,\n            }}\n          >\n            {list.map((li) => (\n              <SongCard\n                name={li}\n                onClick={() => {\n                  console.log(\"oncliced\");\n                  changeInp(li);\n                  changeResults([]);\n                }}\n              />\n            ))}\n          </ul>\n        </div>\n        <div>\n          <span className=\"method\">Collaborative Filtering</span>\n\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              onChange={(e) => {\n                changeMethod(e.target.checked);\n                changeList([]);\n              }}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n          <span className=\"method\">Content Based </span>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn\"\n          style={{\n            fontWeight:\"700\",\n            letterSpacing:\"2px\"\n          }}\n          onClick={() => {\n            changeResults([]);\n            changeList([]);\n            document.getElementById(\"Loading\").style.display = \"flex\";\n            document.getElementById(\"magic\").style.display = \"none\";\n            document.getElementById(\"error\").style.display = \"none\";\n            console.log(inp, method);\n            if (method === true) {\n              fetch(\n                `https://music-recommender-ai.herokuapp.com/api/content/find?q=${encodeURI(\n                  inp\n                )}&c=4`\n              )\n                .then((blob) => blob.json())\n                .then((data) => {\n            document.getElementById(\"Loading\").style.display = \"none\";\n\n                  if (data.error) {\n                    changeResults([]);\n                    document.getElementById(\"error\").style.display = \"block\";\n                  } else {\n                    document.getElementById(\"error\").style.display = \"none\";\n                    changeResults(data);\n                  }\n                  console.log(data);\n                });\n            } else {\n              fetch(\n                `https://music-recommender-ai.herokuapp.com/api/collab/find?q=${encodeURI(\n                  inp\n                )}&c=4`\n              )\n                .then((blob) => blob.json())\n                .then((data) => {\n                  document.getElementById(\"Loading\").style.display = \"none\";\n\n                  if (data.error) {\n                    changeResults([]);\n                    document.getElementById(\"error\").style.display = \"block\";\n                  } else {\n                    document.getElementById(\"error\").style.display = \"none\";\n\n                    changeResults(data);\n                  }\n                  console.log(data);\n                });\n            }\n          }}\n        >\n          Find your next favourite song\n        </button>\n        <div>\n          <div style={{ textAlign: \"center\", display:\"none\", alignItems:\"center\" }} id=\"Loading\">\n\n            <h3> Getting Results, please wait</h3> \n            <div class=\"loader\"></div> \n          </div>\n          <h1 style={{ textAlign: \"center\", display: \"none\" }} id=\"error\">\n            Sorry an error occured\n          </h1>\n          <h1 style={{ textAlign: \"center\" }} id=\"magic\">\n            Your Recommendations are:\n          </h1>\n          {/* <h3 id=\"magic\">\n            Track\n          </h3> */}\n\n          <ul>\n            {results.length > 0\n              ? results.map((result) => (\n                  <SongResultCard name={result.name}></SongResultCard>\n                ))\n              : \"\"}\n          </ul>\n          <div ref={myRef}> </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}