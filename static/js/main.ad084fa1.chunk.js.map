{"version":3,"sources":["components/SongCard.js","components/SongResultCard.js","App.js","reportWebVitals.js","index.js"],"names":["SongCard","props","className","onClick","name","SongResultCard","target","href","App","useState","inp","changeInp","list","changeList","method","changeMethod","results","changeResults","myRef","useRef","useEffect","document","getElementById","style","display","fetch","then","blob","json","data","console","log","length","current","scrollIntoView","src","alt","marginBottom","value","type","onChange","e","placeholder","backgroundColor","borderRadius","padding","marginTop","slice","map","li","checked","encodeURI","error","textAlign","alignItems","id","class","result","ref","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ad084fa1.chunk.js","sourcesContent":["function SongCard(props) {\r\n  return (\r\n    <div className=\"songCard\">\r\n        <li onClick={props.onClick}>{props.name}</li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongCard;\r\n","function SongResultCard(props) {\r\n    return (\r\n      <div className=\"songCard\">\r\n        <a target=\"_blank\" href={`https://www.youtube.com/results?search_query=${props.name}`}>\r\n          <li onClick={props.onClick}>{props.name}</li>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default SongResultCard;\r\n  ","import \"./App.css\";\nimport SongCard from \"./components/SongCard\";\nimport { useEffect, useState, useRef } from \"react\";\nimport SongResultCard from \"./components/SongResultCard\";\n\nfunction App() {\n  let [inp, changeInp] = useState(\"\");\n  let [list, changeList] = useState([]);\n  let [method, changeMethod] = useState(false);\n  let [results, changeResults] = useState([]);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (inp === \"\") {\n      changeList([]);\n      return;\n    }\n    document.getElementById(\"error\").style.display = \"none\";\n\n    fetch(`https://music-recommender-ai.herokuapp.com/api/search?q=${inp}`, {\n      method: \"GET\",\n    })\n      .then((blob) => blob.json())\n      .then((data) => {\n        console.log(data);\n        changeList(data);\n      });\n  }, [inp]);\n\n  useEffect(() => {\n    if (results === [] || results.length === 0) {\n      document.getElementById(\"magic\").style.display = \"none\";\n    } else {\n      myRef.current.scrollIntoView();\n      changeList([]);\n      document.getElementById(\"magic\").style.display = \"block\";\n      document.getElementById(\"error\").style.display = \"none\";\n\n    }\n  }, [results]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Spotify_logo_without_text.svg/768px-Spotify_logo_without_text.svg.png\"\n          className=\"App-logo\"\n          alt=\"logo\"\n        />\n        <div className=\"search\">\n          <input\n            style={{\n              marginBottom: \"0\",\n            }}\n            value={inp}\n            type=\"text\"\n            onChange={(e) => {\n              changeInp(e.target.value);\n              changeResults([]);\n            }}\n            placeholder=\"Enter your favourite song\"\n          />\n          <ul\n            style={{\n              backgroundColor: \"#1aa34a\",\n              borderRadius: \"0 0 5px 5px\",\n              padding: \"0.5em\",\n              marginTop: 0,\n            }}\n          >\n            {list.slice(0, 5).map((li) => (\n              <SongCard\n                name={li}\n                onClick={() => {\n                  console.log(\"oncliced\");\n                  changeInp(li);\n                  changeResults([]);\n                }}\n              />\n            ))}\n          </ul>\n        </div>\n        <div>\n          <span className=\"method\">Collaborative Filtering</span>\n\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              onChange={(e) => {\n                changeMethod(e.target.checked);\n              }}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n          <span className=\"method\">Content Based </span>\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => {\n            document.getElementById(\"Loading\").style.display = \"flex\";\n            console.log(inp, method);\n            if (method === true) {\n              fetch(\n                `https://music-recommender-ai.herokuapp.com/api/content/find?q=${encodeURI(\n                  inp\n                )}&c=4`\n              )\n                .then((blob) => blob.json())\n                .then((data) => {\n            document.getElementById(\"Loading\").style.display = \"none\";\n\n                  if (data.error) {\n                    changeResults([]);\n                    document.getElementById(\"error\").style.display = \"block\";\n                  } else {\n                    document.getElementById(\"error\").style.display = \"none\";\n                    changeResults(data);\n                  }\n                  console.log(data);\n                });\n            } else {\n              fetch(\n                `https://music-recommender-ai.herokuapp.com/api/collab/find?q=${encodeURI(\n                  inp\n                )}&c=4`\n              )\n                .then((blob) => blob.json())\n                .then((data) => {\n                  document.getElementById(\"Loading\").style.display = \"none\";\n\n                  if (data.error) {\n                    changeResults([]);\n                    document.getElementById(\"error\").style.display = \"block\";\n                  } else {\n                    document.getElementById(\"error\").style.display = \"none\";\n\n                    changeResults(data);\n                  }\n                  console.log(data);\n                });\n            }\n          }}\n        >\n          Find your next favourite song\n        </button>\n        <div>\n          <div style={{ textAlign: \"center\", display:\"none\", alignItems:\"center\" }} id=\"Loading\">\n\n            <h3> Getting Results, please wait</h3> \n            <div class=\"loader\"></div> \n          </div>\n          <h1 style={{ textAlign: \"center\", display: \"none\" }} id=\"error\">\n            Sorry an error occured\n          </h1>\n          <h1 style={{ textAlign: \"center\" }} id=\"magic\">\n            Your Recommendations are:\n          </h1>\n\n          <ul>\n            {results.length > 0\n              ? results.map((result) => (\n                  <SongResultCard name={result.name}></SongResultCard>\n                ))\n              : \"\"}\n          </ul>\n          <div ref={myRef}> </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}